name: Deploy Storage Container and Databricks Setup

on:
  workflow_dispatch:
    inputs:
      storageAccountName:
        description: 'Storage Account Name'
        required: true
      containerName:
        description: 'Container Name'
        required: true
      resourceGroupName:
        description: 'Resource Group Name'
        required: true
      clientName:
        description: 'Client Name'
        required: true
      functionAppName:
        description: 'Function App Name'
        required: true
      location:
        description: 'Azure Location for Function App'
        required: true
      existingStorageAccountName:
        description: 'Existing Storage Account Name'
        required: true
      existingStorageAccountResourceGroupName:
        description: 'Resource Group of Existing Storage Account'
        required: true
      existingEventGridTopicName:
        description: 'Existing Event Grid Topic Name'
        required: true
      existingEventGridTopicResourceGroupName:
        description: 'Resource Group of Existing Event Grid Topic'
        required: true

jobs:
  deploy-and-setup:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate container names
        id: generate_names
        run: |
          BASE_CONTAINERS=("staging" "intermediate" "failed")
          PREFIXED_CONTAINERS=()
          for c in "${BASE_CONTAINERS[@]}"; do
            name="${{ github.event.inputs.clientName }}-${c}"
            name=$(echo "$name" | tr '[:upper:]' '[:lower:]')
            PREFIXED_CONTAINERS+=("$name")
          done
          CONTAINER_LIST=$(IFS=,; echo "${PREFIXED_CONTAINERS[*]}")
          echo "containers=$CONTAINER_LIST" >> $GITHUB_OUTPUT

      - name: Set up Azure CLI
        uses: azure/cli@v1
        with:
          azcliversion: 2.61.0
          inlineScript: |
            az --version
            echo "Azure CLI setup complete"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Blob Container via ARM Template
        run: |
          echo "Creating containers: ${{ steps.generate_names.outputs.containers }}"
          IFS=',' read -ra CONTAINERS <<< "${{ steps.generate_names.outputs.containers }}"
          for container in "${CONTAINERS[@]}"; do
            echo "Deploying container: $container"
            az deployment group create \
              --resource-group "${{ github.event.inputs.resourceGroupName }}" \
              --template-file workflows/templates/create-container.json \
              --parameters storageAccountName="${{ github.event.inputs.storageAccountName }}" containerName="$container"
          done

      - name: Create Azure Function App via ARM Template
        run: |
          echo "Deploying Azure Function App: ${{ github.event.inputs.functionAppName }}"
          az deployment group create \
            --resource-group "${{ github.event.inputs.resourceGroupName }}" \
            --template-file workflows/templates/test_func_reh.json \
            --parameters \
              functionAppName="${{ github.event.inputs.functionAppName }}" \
              location="${{ github.event.inputs.location }}" \
              existingStorageAccountName="${{ github.event.inputs.existingStorageAccountName }}" \
              existingStorageAccountResourceGroupName="${{ github.event.inputs.existingStorageAccountResourceGroupName }}" \
              existingEventGridTopicName="${{ github.event.inputs.existingEventGridTopicName }}" \
              existingEventGridTopicResourceGroupName="${{ github.event.inputs.existingEventGridTopicResourceGroupName }}"